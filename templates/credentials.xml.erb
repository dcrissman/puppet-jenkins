<com.cloudbees.plugins.credentials.SystemCredentialsProvider plugin="credentials@1.4">
<% if @credentials.empty? -%>
  <credentials/>
<% else -%>
  <credentials>
<% @credentials.each do |cred| -%>
<% if cred['type'] == 'privatekey' -%>
    <com.cloudbees.jenkins.plugins.sshcredentials.impl.BasicSSHUserPrivateKey plugin="ssh-credentials@0.3">
      <scope><%= cred['scope'].upcase %></scope>
      <id></id>
      <description><%= cred['description'] %></description>
      <username><%= cred['username'] %></username>
      <passphrase></passphrase>
<% if !cred['privatekey'].nil? && cred['privatekey']['type'] == 'inline' -%>
      <privateKeySource class="com.cloudbees.jenkins.plugins.sshcredentials.impl.BasicSSHUserPrivateKey$DirectEntryPrivateKeySource">
        <privateKey><%= cred['privatekey']['key'] %></privateKey>
      </privateKeySource>
<% else if !cred['privatekey'].nil? && cred['privatekey']['type'] == 'file' -%>
      <privateKeySource class="com.cloudbees.jenkins.plugins.sshcredentials.impl.BasicSSHUserPrivateKey$FileOnMasterPrivateKeySource">
        <privateKeyFile><%= cred['privatekey']['key'] %></privateKeyFile>
      </privateKeySource>
<% else -%>
      <privateKeySource class="com.cloudbees.jenkins.plugins.sshcredentials.impl.BasicSSHUserPrivateKey$UsersPrivateKeySource"/>
<% end -%>
    </com.cloudbees.jenkins.plugins.sshcredentials.impl.BasicSSHUserPrivateKey>
<% else -%>
    <com.cloudbees.jenkins.plugins.sshcredentials.impl.BasicSSHUserPassword plugin="ssh-credentials@0.3">
      <scope><%= cred['scope'].upcase %></scope>
      <id></id>
      <description><%= cred['description'] %></description>
      <username><%= cred['username'] %></username>
      <password></password>
    </com.cloudbees.jenkins.plugins.sshcredentials.impl.BasicSSHUserPassword>
<% end -%>
<% end -%>
  </credentials>
<% end -%>
<com.cloudbees.plugins.credentials.SystemCredentialsProvider plugin="credentials@1.4">